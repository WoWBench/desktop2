{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/actions/app.js","webpack:///./src/app.js","webpack:///./src/components/Addon.jsx","webpack:///./src/components/AddonListing.jsx","webpack:///./src/components/App.jsx","webpack:///./src/stores/app.js","webpack:///external \"electron\""],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/app.js\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const SET_INSTALLATION_FOLDER = 'SET_INSTALLATION_FOLDER'\nconst SET_ADDONS_STATUS = 'SET_ADDONS_STATUS'\n\nexport function setInstallationFolder (folder) {\n  return {\n    type: SET_INSTALLATION_FOLDER,\n    payload: folder\n  }\n}\n\nexport function setAddonsStatus (addons) {\n  return {\n    type: SET_ADDONS_STATUS,\n    payload: addons\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport store from './stores/app'\nimport electron from 'electron'\nimport { setAddonsStatus } from './actions/app'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('app')\n)\n\nelectron.ipcRenderer.on('get-addons', (event, addons) => {\n  store.dispatch(setAddonsStatus(addons))\n})\n\nelectron.ipcRenderer.send('get-addons', {})\n","import React from 'react'\n\nexport default class Addon extends React.Component {\n  /* Render an addon as a table row */\n  render() {\n    let toc = this.props.addon.toc\n    return <tr>\n      <td>{toc.title}</td>\n      <td>{toc.version}</td>\n      <td>{toc.author}</td>\n    </tr>\n  }\n}\n","import React from 'react'\nimport Addon from './Addon'\n\nexport default class AddonListing extends React.Component {\n  renderAddonRows () {\n    if (typeof this.props.addons !== 'undefined') {\n      return this.props.addons.map((a) => {\n        return <Addon addon={a} key={a.toc.title} />\n      })\n    }\n    return <tr><td>No data found</td></tr>\n  }\n\n  render () {\n    return (\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Version</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderAddonRows()}\n        </tbody>\n      </table>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Addon from './Addon'\nimport AddonListing from './AddonListing'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <>\n        <h1>I am a React App</h1>\n        <AddonListing addons={this.props.addons} />\n      </>\n    )\n  }\n}\n\n// export default \n\nconst mapState = state => ({ addons: state.addons })\n\nexport default connect(\n  mapState\n)(App)\n","import { createStore } from 'redux'\n\nfunction appStore(state = {}, action) {\n  switch (action.type) {\n    case 'SET_ADDONS_STATUS':\n      return Object.assign({}, state, {\n        addons: action.payload\n      })\n    case 'SET_INSTALLATION_FOLDER':\n      return Object.assign({}, state, {\n        installation_folder: action.payload\n      })\n    default:\n      return state\n  }\n}\n\nlet store = createStore(appStore)\n\nexport default store","module.exports = require(\"electron\");"],"mappingsvJA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAMA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAKA;;;;AATA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAaA;;;;AAzBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAGA;AAAA;AAGA;;;;AARA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAVA;AAYA;AACA;AACA;AAEA;;;;;;;;;;;ACnBA;;;;A","sourceRoot":""}